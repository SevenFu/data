#!/usr/bin/env python
# Copyright (c) 2014 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import os
import re
import sys
import cPickle
from time import gmtime, strftime
import perfstats as ps
from core import path_util
from core import trybot_command
sys.path.insert(1, path_util.GetTelemetryDir())
from telemetry import benchmark_runner
from telemetry import project_config
from chrome_telemetry_build import chromium_config

if __name__ == '__main__':
    time = strftime('%Y-%m-%d-%H-%M', gmtime())
    for arg in sys.argv:
        if "speedometer" in arg or "smoothness" in arg or \
           "page_cycler_v2" in arg or "tab_switching" in arg or \
           "webrtcIntel" in arg :
            label = '{0}-{1}'.format(arg, time)
        elif re.match('\w+\.\w+', arg):
            label = '{0}-{1}'.format(arg.split('.')[0], time)

    sys.stdout = open('{0}.res'.format(label), 'w',0)

    base_dir = os.path.dirname(os.path.realpath(__file__))

    if "speedometer" in arg or "smoothness" in arg or \
           "page_cycler_v2" in arg or "tab_switching" in arg \
           or "webrtcIntel" in arg:
        config = chromium_config.ChromiumConfig(
            benchmark_dirs=[path_util.GetPerfBenchmarksDir(),
                            path_util.GetPerfContribDir()],
            top_level_dir=path_util.GetPerfDir())
    else:
        config = project_config.ProjectConfig(
            top_level_dir=base_dir,
            benchmark_dirs = [os.path.join(base_dir, 'benchmarks')])
    benchmark_runner.main(config)

    for fileName in os.listdir(os.getcwd()):
        if '{0}.'.format(label.split('-')[0]) in fileName:
            os.rename(fileName, '{0}-{1}.{2}'.format(fileName.split('.')[0],
                      time, fileName.split('.')[1]))

    pl = ps.PayloadPickle(label)
    with open('{0}.pkl'.format(label), 'wb') as fp:
        cPickle.dump(pl, fp)

    #for fileName in os.listdir(os.getcwd()):
    #    if '{0}.'.format(label) in fileName and '.pkl' not in fileName:
    #        os.remove(fileName)
